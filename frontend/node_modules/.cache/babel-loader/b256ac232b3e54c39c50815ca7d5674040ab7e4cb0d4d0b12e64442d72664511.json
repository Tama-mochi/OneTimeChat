{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\masa\\\\ephemeral-chat-app\\\\frontend\\\\src\\\\pages\\\\CreateChatPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateChatPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [roomName, setRoomName] = useState('');\n  const [chatType, setChatType] = useState('individual');\n  const [sessionInfo, setSessionInfo] = useState(null);\n  const handleCreate = async () => {\n    if (!roomName) return;\n    // REST API を呼び出してチャットセッションを作成する\n    const response = await fetch('http://localhost:3000/api/createSession', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roomName,\n        type: chatType\n      })\n    });\n    const data = await response.json();\n    setSessionInfo({\n      sessionId: data.sessionId,\n      pin: data.pin\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'black',\n      color: 'white',\n      height: '100vh',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u30C1\\u30E3\\u30C3\\u30C8\\u4F5C\\u6210\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u30EB\\u30FC\\u30E0\\u540D\\u3092\\u5165\\u529B\",\n      value: roomName,\n      onChange: e => setRoomName(e.target.value),\n      style: {\n        backgroundColor: 'gray',\n        color: 'white',\n        padding: '10px',\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setChatType('individual'),\n        style: {\n          backgroundColor: 'gray',\n          color: 'white',\n          marginRight: '10px'\n        },\n        children: \"\\u500B\\u4EBA\\u30C1\\u30E3\\u30C3\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setChatType('group'),\n        style: {\n          backgroundColor: 'gray',\n          color: 'white'\n        },\n        children: \"\\u30B0\\u30EB\\u30FC\\u30D7\\u30C1\\u30E3\\u30C3\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreate,\n      style: {\n        backgroundColor: 'gray',\n        color: 'white',\n        marginTop: '20px'\n      },\n      children: \"\\u4F5C\\u6210\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), sessionInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3URL: \", `http://localhost:3000/chat/${sessionInfo.sessionId}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"PIN: \", sessionInfo.pin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateChatPage, \"Ztm4jS6yLJwe3d+VU2WU1/leJF8=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateChatPage;\nexport default CreateChatPage;\nvar _c;\n$RefreshReg$(_c, \"CreateChatPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CreateChatPage","_s","navigate","roomName","setRoomName","chatType","setChatType","sessionInfo","setSessionInfo","handleCreate","response","fetch","method","headers","body","JSON","stringify","type","data","json","sessionId","pin","style","backgroundColor","color","height","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","marginBottom","onClick","marginRight","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/masa/ephemeral-chat-app/frontend/src/pages/CreateChatPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CreateChatPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [roomName, setRoomName] = useState('');\r\n  const [chatType, setChatType] = useState<'individual' | 'group'>('individual');\r\n  const [sessionInfo, setSessionInfo] = useState<{ sessionId: string; pin: string } | null>(null);\r\n\r\n  const handleCreate = async () => {\r\n    if (!roomName) return;\r\n    // REST API を呼び出してチャットセッションを作成する\r\n    const response = await fetch('http://localhost:3000/api/createSession', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ roomName, type: chatType })\r\n    });\r\n    const data = await response.json();\r\n    setSessionInfo({ sessionId: data.sessionId, pin: data.pin });\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: 'black', color: 'white', height: '100vh', padding: '20px' }}>\r\n      <h2>チャット作成</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"ルーム名を入力\"\r\n        value={roomName}\r\n        onChange={(e) => setRoomName(e.target.value)}\r\n        style={{ backgroundColor: 'gray', color: 'white', padding: '10px', marginBottom: '10px' }}\r\n      />\r\n      <div>\r\n        <button onClick={() => setChatType('individual')} style={{ backgroundColor: 'gray', color: 'white', marginRight: '10px' }}>\r\n          個人チャット\r\n        </button>\r\n        <button onClick={() => setChatType('group')} style={{ backgroundColor: 'gray', color: 'white' }}>\r\n          グループチャット\r\n        </button>\r\n      </div>\r\n      <button onClick={handleCreate} style={{ backgroundColor: 'gray', color: 'white', marginTop: '20px' }}>\r\n        作成\r\n      </button>\r\n\r\n      {sessionInfo && (\r\n        <div style={{ marginTop: '20px' }}>\r\n          <p>セッションURL: {`http://localhost:3000/chat/${sessionInfo.sessionId}`}</p>\r\n          <p>PIN: {sessionInfo.pin}</p>\r\n          {/* クリップボードコピー機能などを後から追加 */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}