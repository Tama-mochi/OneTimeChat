{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\masa\\\\ephemeral-chat-app\\\\frontend\\\\src\\\\pages\\\\ChatPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    sessionId\n  } = useParams();\n  const location = useLocation();\n  // JoinChatPage から userName, roomName, pin を state 経由で受け取る前提です\n  const {\n    userName,\n    roomName,\n    pin\n  } = location.state || {\n    userName: 'Unknown',\n    roomName: '',\n    pin: ''\n  };\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const newSocket = io('http://localhost:3000');\n    setSocket(newSocket);\n    newSocket.on('connect', () => {\n      console.log('Socket接続完了');\n      newSocket.emit('joinRoom', {\n        sessionId,\n        userName\n      });\n    });\n    newSocket.on('chatHistory', chatHistory => {\n      setMessages(chatHistory);\n    });\n    newSocket.on('newMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    newSocket.on('errorMessage', msg => {\n      setError(msg);\n    });\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [sessionId, userName]);\n  const handleSend = () => {\n    if (socket && newMessage.trim() !== '') {\n      socket.emit('chatMessage', {\n        content: newMessage,\n        type: 'text'\n      });\n      setNewMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'black',\n      color: 'white',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: {\n        padding: '10px',\n        borderBottom: '1px solid gray'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u30C1\\u30E3\\u30C3\\u30C8\\u30EB\\u30FC\\u30E0: \", roomName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u3042\\u306A\\u305F\\u306E\\u30E6\\u30FC\\u30B6\\u30FCID: \", userName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3ID: \", sessionId, \" / PIN: \", pin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        flex: 1,\n        overflowY: 'auto',\n        padding: '10px'\n      },\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }, this), messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [new Date(message.timestamp).toLocaleTimeString(), \" - \", message.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      style: {\n        padding: '10px',\n        borderTop: '1px solid gray',\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u5165\\u529B...\",\n        style: {\n          backgroundColor: 'gray',\n          color: 'white',\n          padding: '10px',\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        style: {\n          backgroundColor: 'gray',\n          color: 'white',\n          padding: '10px',\n          marginLeft: '10px'\n        },\n        children: \"\\u9001\\u4FE1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"fBMjas8wVhnxht7cIAF2c72hqc8=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocation","io","jsxDEV","_jsxDEV","ChatPage","_s","sessionId","location","userName","roomName","pin","state","socket","setSocket","messages","setMessages","newMessage","setNewMessage","error","setError","newSocket","on","console","log","emit","chatHistory","message","prevMessages","msg","disconnect","handleSend","trim","content","type","style","backgroundColor","color","height","display","flexDirection","children","padding","borderBottom","fileName","_jsxFileName","lineNumber","columnNumber","flex","overflowY","map","marginBottom","Date","timestamp","toLocaleTimeString","sender","id","borderTop","value","onChange","e","target","placeholder","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/masa/ephemeral-chat-app/frontend/src/pages/ChatPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport io, { Socket } from 'socket.io-client';\r\n\r\ninterface ChatMessage {\r\n  id: string;\r\n  sender: string;\r\n  content: string;\r\n  timestamp: number;\r\n  type: 'text' | 'file' | 'image' | 'video';\r\n}\r\n\r\nconst ChatPage: React.FC = () => {\r\n  const { sessionId } = useParams<{ sessionId: string }>();\r\n  const location = useLocation();\r\n  // JoinChatPage から userName, roomName, pin を state 経由で受け取る前提です\r\n  const { userName, roomName, pin } = (location.state as { userName: string; roomName: string; pin: string }) || {\r\n    userName: 'Unknown',\r\n    roomName: '',\r\n    pin: ''\r\n  };\r\n\r\n  const [socket, setSocket] = useState<Socket | null>(null);\r\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const newSocket = io('http://localhost:3000');\r\n    setSocket(newSocket);\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('Socket接続完了');\r\n      newSocket.emit('joinRoom', { sessionId, userName });\r\n    });\r\n\r\n    newSocket.on('chatHistory', (chatHistory: ChatMessage[]) => {\r\n      setMessages(chatHistory);\r\n    });\r\n\r\n    newSocket.on('newMessage', (message: ChatMessage) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    newSocket.on('errorMessage', (msg: string) => {\r\n      setError(msg);\r\n    });\r\n\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, [sessionId, userName]);\r\n\r\n  const handleSend = () => {\r\n    if (socket && newMessage.trim() !== '') {\r\n      socket.emit('chatMessage', { content: newMessage, type: 'text' });\r\n      setNewMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: 'black',\r\n        color: 'white',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n      }}\r\n    >\r\n      <header style={{ padding: '10px', borderBottom: '1px solid gray' }}>\r\n        <h2>チャットルーム: {roomName}</h2>\r\n        <p>あなたのユーザーID: {userName}</p>\r\n        <p>セッションID: {sessionId} / PIN: {pin}</p>\r\n      </header>\r\n      <main style={{ flex: 1, overflowY: 'auto', padding: '10px' }}>\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        {messages.map((message) => (\r\n          <div key={message.id} style={{ marginBottom: '10px' }}>\r\n            <span>\r\n              {new Date(message.timestamp).toLocaleTimeString()} - {message.sender}:\r\n            </span>\r\n            <p>{message.content}</p>\r\n          </div>\r\n        ))}\r\n      </main>\r\n      <footer style={{ padding: '10px', borderTop: '1px solid gray', display: 'flex' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"メッセージを入力...\"\r\n          style={{\r\n            backgroundColor: 'gray',\r\n            color: 'white',\r\n            padding: '10px',\r\n            flex: 1\r\n          }}\r\n        />\r\n        <button\r\n          onClick={handleSend}\r\n          style={{\r\n            backgroundColor: 'gray',\r\n            color: 'white',\r\n            padding: '10px',\r\n            marginLeft: '10px'\r\n          }}\r\n        >\r\n          送信\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}