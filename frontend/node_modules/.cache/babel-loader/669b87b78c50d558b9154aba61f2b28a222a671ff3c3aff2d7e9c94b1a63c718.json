{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\masa\\\\ephemeral-chat-app\\\\frontend\\\\src\\\\pages\\\\JoinChatPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JoinChatPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [url, setUrl] = useState('');\n  const [pin, setPin] = useState('');\n  const [userName, setUserName] = useState('');\n  const [error, setError] = useState('');\n  const handleJoin = async () => {\n    if (!url || !pin || !userName) {\n      setError('すべての項目を入力してください');\n      return;\n    }\n\n    // URLからセッションIDを抽出（例： http://localhost:3000/chat/<sessionId>）\n    let sessionId = '';\n    try {\n      const urlObj = new URL(url);\n      const pathParts = urlObj.pathname.split('/');\n      // \"/chat/セッションID\" として取得する想定\n      sessionId = pathParts[2] || '';\n    } catch (err) {\n      setError('有効なURLを入力してください');\n      return;\n    }\n    if (!sessionId) {\n      setError('セッションIDをURLから取得できませんでした');\n      return;\n    }\n\n    // joinSession API でセッション参加を検証\n    const response = await fetch('http://localhost:3000/api/joinSession', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        sessionId,\n        pin,\n        userName\n      })\n    });\n    if (response.ok) {\n      // 成功時はチャット画面へ遷移\n      navigate(`/chat/${sessionId}`, {\n        state: {\n          userName\n        }\n      });\n    } else {\n      const data = await response.json();\n      setError(data.error || '参加に失敗しました');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'black',\n      color: 'white',\n      height: '100vh',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u30C1\\u30E3\\u30C3\\u30C8\\u53C2\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u30C1\\u30E3\\u30C3\\u30C8URL\\u3092\\u5165\\u529B\",\n      value: url,\n      onChange: e => setUrl(e.target.value),\n      style: {\n        backgroundColor: 'gray',\n        color: 'white',\n        padding: '10px',\n        marginBottom: '10px',\n        display: 'block',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"PIN\\u3092\\u5165\\u529B\",\n      value: pin,\n      onChange: e => setPin(e.target.value),\n      style: {\n        backgroundColor: 'gray',\n        color: 'white',\n        padding: '10px',\n        marginBottom: '10px',\n        display: 'block',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\\u3092\\u5165\\u529B\",\n      value: userName,\n      onChange: e => setUserName(e.target.value),\n      style: {\n        backgroundColor: 'gray',\n        color: 'white',\n        padding: '10px',\n        marginBottom: '10px',\n        display: 'block',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleJoin,\n      style: {\n        backgroundColor: 'gray',\n        color: 'white',\n        padding: '10px',\n        width: '100%'\n      },\n      children: \"\\u53C2\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(JoinChatPage, \"neacjgo+SgVzL4/k61yb9HwAGm8=\", false, function () {\n  return [useNavigate];\n});\n_c = JoinChatPage;\nexport default JoinChatPage;\nvar _c;\n$RefreshReg$(_c, \"JoinChatPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","JoinChatPage","_s","navigate","url","setUrl","pin","setPin","userName","setUserName","error","setError","handleJoin","sessionId","urlObj","URL","pathParts","pathname","split","err","response","fetch","method","headers","body","JSON","stringify","ok","state","data","json","style","backgroundColor","color","height","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","marginBottom","display","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/masa/ephemeral-chat-app/frontend/src/pages/JoinChatPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst JoinChatPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [url, setUrl] = useState('');\r\n  const [pin, setPin] = useState('');\r\n  const [userName, setUserName] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleJoin = async () => {\r\n    if (!url || !pin || !userName) {\r\n      setError('すべての項目を入力してください');\r\n      return;\r\n    }\r\n\r\n    // URLからセッションIDを抽出（例： http://localhost:3000/chat/<sessionId>）\r\n    let sessionId = '';\r\n    try {\r\n      const urlObj = new URL(url);\r\n      const pathParts = urlObj.pathname.split('/');\r\n      // \"/chat/セッションID\" として取得する想定\r\n      sessionId = pathParts[2] || '';\r\n    } catch (err) {\r\n      setError('有効なURLを入力してください');\r\n      return;\r\n    }\r\n\r\n    if (!sessionId) {\r\n      setError('セッションIDをURLから取得できませんでした');\r\n      return;\r\n    }\r\n\r\n    // joinSession API でセッション参加を検証\r\n    const response = await fetch('http://localhost:3000/api/joinSession', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ sessionId, pin, userName })\r\n    });\r\n\r\n    if (response.ok) {\r\n      // 成功時はチャット画面へ遷移\r\n      navigate(`/chat/${sessionId}`, { state: { userName } });\r\n    } else {\r\n      const data = await response.json();\r\n      setError(data.error || '参加に失敗しました');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: 'black', color: 'white', height: '100vh', padding: '20px' }}>\r\n      <h2>チャット参加</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"チャットURLを入力\"\r\n        value={url}\r\n        onChange={(e) => setUrl(e.target.value)}\r\n        style={{\r\n          backgroundColor: 'gray',\r\n          color: 'white',\r\n          padding: '10px',\r\n          marginBottom: '10px',\r\n          display: 'block',\r\n          width: '100%'\r\n        }}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"PINを入力\"\r\n        value={pin}\r\n        onChange={(e) => setPin(e.target.value)}\r\n        style={{\r\n          backgroundColor: 'gray',\r\n          color: 'white',\r\n          padding: '10px',\r\n          marginBottom: '10px',\r\n          display: 'block',\r\n          width: '100%'\r\n        }}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"ユーザー名を入力\"\r\n        value={userName}\r\n        onChange={(e) => setUserName(e.target.value)}\r\n        style={{\r\n          backgroundColor: 'gray',\r\n          color: 'white',\r\n          padding: '10px',\r\n          marginBottom: '10px',\r\n          display: 'block',\r\n          width: '100%'\r\n        }}\r\n      />\r\n      <button\r\n        onClick={handleJoin}\r\n        style={{\r\n          backgroundColor: 'gray',\r\n          color: 'white',\r\n          padding: '10px',\r\n          width: '100%'\r\n        }}\r\n      >\r\n        参加\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}